{"version":3,"sources":["../src/index.js"],"names":["express","require","graphqlHTTP","buildSchema","schema","root","hello","app","use","rootValue","graphiql","listen","console","log"],"mappings":";;AAAA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;;eACsBA,QAAQ,iBAAR,C;IAAhBC,W,YAAAA,W;;gBACgBD,QAAQ,SAAR,C;IAAhBE,W,aAAAA,W;;AAEN;;;AACA,IAAIC,SAASD,yDAAb;;AAMA;AACA,IAAIE,OAAO;AACTC,SAAO,iBAAM;AACX,WAAO,cAAP;AACD;AAHQ,CAAX;;AAMA,IAAIC,MAAMP,SAAV;AACAO,IAAIC,GAAJ,CAAQ,UAAR,EAAoBN,YAAY;AAC9BE,UAAQA,MADsB;AAE9BK,aAAWJ,IAFmB;AAG9BK,YAAU;AAHoB,CAAZ,CAApB;AAKAH,IAAII,MAAJ,CAAW,IAAX;AACAC,QAAQC,GAAR,CAAY,+DAAZ","file":"index.js","sourcesContent":["var express = require('express');\r\nvar { graphqlHTTP } = require('express-graphql');\r\nvar { buildSchema } = require('graphql');\r\n \r\n// Construct a schema, using GraphQL schema language\r\nvar schema = buildSchema(`\r\n  type Query {\r\n    hello: String\r\n  }\r\n`);\r\n \r\n// The root provides a resolver function for each API endpoint\r\nvar root = {\r\n  hello: () => {\r\n    return 'Hello world!';\r\n  },\r\n};\r\n \r\nvar app = express();\r\napp.use('/graphql', graphqlHTTP({\r\n  schema: schema,\r\n  rootValue: root,\r\n  graphiql: true,\r\n}));\r\napp.listen(4000);\r\nconsole.log('Running a GraphQL API server at http://localhost:4000/graphql');"]}